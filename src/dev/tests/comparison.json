{
  "name": "comparison",
  "method": "eval",
  "context": {
    "a": "1",
    "b": 2,
    "c": {
      "a": 4,
      "b": 5
    },
    "d": "house",
    "e": "car",
    "f": "",
    "g": null,
    "devices": [
      "phone",
      "computer",
      "robot"
    ],
    "pi": 3.141516,
    "requerid": false,
    "device": "phone",
    "date": "2022-08-22",
    "time": "22:14:30",
    "datetime": "1997-07-08T22:14:30.000Z"
  },
  "cases": [
    {
      "expression": "3>2",
      "result": true
    },
    {
      "expression": "a+b",
      "result": "12"
    },
    {
      "expression": "-3>2*2",
      "result": false
    },
    {
      "expression": "a*3==b+1",
      "result": true
    },
    {
      "expression": "a*3===b+1",
      "result": true
    },
    {
      "expression": "-4==-(2*2)",
      "result": true
    },
    {
      "expression": "4!=2*2",
      "result": false
    },
    {
      "expression": "4!==2*2",
      "result": false
    },
    {
      "expression": "4<>2*2",
      "result": false
    },
    {
      "expression": "c.a>b*2",
      "result": false
    },
    {
      "expression": "c.a>=b*2",
      "result": true
    },
    {
      "expression": "c.a<=b*2",
      "result": true
    },
    {
      "expression": "c.a<b*2",
      "result": false
    },
    {
      "expression": "d<e",
      "result": false
    },
    {
      "expression": "d>e",
      "result": true
    },
    {
      "expression": "d<>e",
      "result": true
    },
    {
      "expression": "includes(devices,\"phone\")",
      "result": true
    },
    {
      "expression": "includes(devices,\"other\")",
      "result": false
    },
    {
      "expression": "in(devices,\"other\")",
      "result": false
    },
    {
      "expression": "devices.in(\"phone\")",
      "result": true
    },
    {
      "expression": "devices.in(device)",
      "result": true
    },
    {
      "expression": "[\"garage\", \"house\",\"office\"].in(d)",
      "result": true
    },
    {
      "expression": "between(12,10,20)",
      "result": true
    },
    {
      "expression": "between(2,10,20)",
      "result": false
    },
    {
      "expression": "between(pi,1,5)",
      "result": true
    },
    {
      "expression": "isNull(f)",
      "result": false
    },
    {
      "expression": "isNull(g)",
      "result": true
    },
    {
      "expression": "isNotNull(f)",
      "result": true
    },
    {
      "expression": "isNotNull(g)",
      "result": false
    },
    {
      "expression": "isBoolean(requerid)",
      "result": true
    },
    {
      "expression": "isNumber(pi)",
      "result": true
    },
    {
      "expression": "isDecimal(pi)",
      "result": true
    },
    {
      "expression": "isInteger(pi)",
      "result": false
    },
    {
      "expression": "isInteger(b)",
      "result": true
    },
    {
      "expression": "isString(b)",
      "result": false
    },
    {
      "expression": "isString(d)",
      "result": true
    },
    {
      "expression": "isDate(date)",
      "result": true
    },
    {
      "expression": "isDateTime(datetime)",
      "result": true
    },
    {
      "expression": "isDateTime(time)",
      "result": false
    },
    {
      "expression": "isTime(time)",
      "result": false
    },
    {
      "expression": "isObject(c)",
      "result": true
    },
    {
      "expression": "isObject(device)",
      "result": false
    },
    {
      "expression": "isObject(devices)",
      "result": false
    },
    {
      "expression": "isArray(c)",
      "result": false
    },
    {
      "expression": "isArray(device)",
      "result": false
    },
    {
      "expression": "isArray(devices)",
      "result": true
    },
    {
      "expression": "isBooleanFormat(requerid)",
      "result": true
    },
    {
      "expression": "isNumberFormat(pi)",
      "result": true
    },
    {
      "expression": "isDecimalFormat(pi)",
      "result": true
    },
    {
      "expression": "isIntegerFormat(pi)",
      "result": false
    },
    {
      "expression": "isIntegerFormat(b)",
      "result": true
    },
    {
      "expression": "isDateFormat(date)",
      "result": true
    },
    {
      "expression": "isDateTimeFormat(datetime)",
      "result": true
    },
    {
      "expression": "isDateTimeFormat(time)",
      "result": false
    },
    {
      "expression": "isTimeFormat(time)",
      "result": false
    }
  ]
}